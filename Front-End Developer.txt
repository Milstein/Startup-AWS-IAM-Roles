{
  "Version": "2012-10-17",
  "Statement": [
{
      "Sid": "Stmt1502902671383",
      "Action": [
        "workdocs:ActivateUser",
        "workdocs:AddUserToGroup",
        "workdocs:CheckAlias",
        "workdocs:CreateInstance",
        "workdocs:DeactivateUser",
        "workdocs:DeregisterDirectory",
        "workdocs:DescribeAvailableDirectories",
        "workdocs:DescribeInstances",
        "workdocs:RegisterDirectory",
        "workdocs:UpdateInstanceAlias"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Sid": "Stmt1502902778359",
      "Action": [
        "workmail:AddMembersToGroup",
        "workmail:CreateGroup",
        "workmail:CreateMailDomain",
        "workmail:CreateMailUser",
        "workmail:CreateOrganization",
        "workmail:DescribeDirectories",
        "workmail:DescribeKmsKeys",
        "workmail:DescribeOrganizations",
        "workmail:DescribeMailDomains",
        "workmail:DescribeMailGroups",
        "workmail:DescribeMailUsers",
        "workmail:EnableMailDomain",
        "workmail:EnableMailUsers",
        "workmail:EnableMailGroups",
        "workmail:GetMailDomainDetails",
        "workmail:GetMailGroupDetails",
        "workmail:GetMailUserDetails",
        "workmail:GetMobileDeviceDetails",
        "workmail:GetMobileDevicesForUser",
        "workmail:GetMobilePolicyDetails",
        "workmail:ListMembersInMailGroup",
        "workmail:RemoveMembersFromGroup",
        "workmail:SearchMembers",
        "workmail:SetDefaultMailDomain",
        "workmail:SetMailGroupDetails",
        "workmail:SetMailUserDetails",
        "workmail:SetMobilePolicyDetails",
        "workmail:WipeMobileDevice"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
{
      "Sid": "Stmt1502899259354",
      "Action": [
        "codecommit:BatchGetRepositories",
        "codecommit:CreateBranch",
        "codecommit:DeleteBranch",
        "codecommit:CreateRepository",
        "codecommit:GetBlob",
        "codecommit:GetBranch",
        "codecommit:GetCommit",
        "codecommit:GetDifferences",
        "codecommit:GetObjectIdentifier",
        "codecommit:GetReferences",
        "codecommit:GetRepository",
        "codecommit:GetRepositoryTriggers",
        "codecommit:GetTree",
        "codecommit:GitPull",
        "codecommit:GitPush",
        "codecommit:ListBranches",
        "codecommit:ListRepositories",
        "codecommit:PutRepositoryTriggers",
        "codecommit:TestRepositoryTriggers",
        "codecommit:UpdateDefaultBranch",
        "codecommit:UpdateRepositoryDescription",
        "codecommit:UpdateRepositoryName"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
{
      "Sid": "Stmt1502899313786",
      "Action": [
        "workspaces:CreateTags",
        "workspaces:CreateWorkspaces",
        "workspaces:DeleteTags",
        "workspaces:DescribeTags",
        "workspaces:DescribeWorkspaceBundles",
        "workspaces:DescribeWorkspacesConnectionStatus",
        "workspaces:DescribeWorkspaceDirectories",
        "workspaces:DescribeWorkspaces",
        "workspaces:ModifyWorkspaceProperties",
        "workspaces:StartWorkspaces",
        "workspaces:StopWorkspaces",
        "workspaces:RebootWorkspaces",
        "workspaces:RebuildWorkspaces"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Sid": "Stmt1502899489368",
      "Action": [
        "lambda:CreateAlias",
        "lambda:CreateEventSourceMapping",
        "lambda:CreateFunction",
        "lambda:DeleteAlias",
        "lambda:DeleteEventSourceMapping",
        "lambda:GetAccountSettings",
        "lambda:EnableReplication",
        "lambda:GetAlias",
        "lambda:GetEventSourceMapping",
        "lambda:GetFunction",
        "lambda:GetFunctionConfiguration",
        "lambda:GetPolicy",
        "lambda:InvokeAsync",
        "lambda:InvokeFunction",
        "lambda:ListAliases",
        "lambda:ListEventSourceMappings",
        "lambda:ListFunctions",
        "lambda:ListTags",
        "lambda:ListVersionsByFunction",
        "lambda:PublishVersion",
        "lambda:RemovePermission",
        "lambda:TagResource",
        "lambda:UntagResource",
        "lambda:UpdateAlias",
        "lambda:UpdateEventSourceMapping",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Sid": "Stmt1502899592607",
      "Action": [
        "rds:AddTagsToResource",
        "rds:AddSourceIdentifierToSubscription",
        "rds:ApplyPendingMaintenanceAction",
        "rds:AuthorizeDBSecurityGroupIngress",
        "rds:CopyDBClusterSnapshot",
        "rds:CopyDBParameterGroup",
        "rds:CopyDBSnapshot",
        "rds:CopyOptionGroup",
        "rds:CreateDBClusterParameterGroup",
        "rds:CreateDBClusterSnapshot",
        "rds:CreateDBCluster",
        "rds:CreateDBInstance",
        "rds:CreateDBInstanceReadReplica",
        "rds:CreateDBParameterGroup",
        "rds:CreateDBSecurityGroup",
        "rds:CreateDBSnapshot",
        "rds:CreateDBSubnetGroup",
        "rds:CreateEventSubscription",
        "rds:CreateOptionGroup",
        "rds:DescribeAccountAttributes",
        "rds:DescribeCertificates",
        "rds:DescribeEngineDefaultClusterParameters",
        "rds:DescribeEngineDefaultParameters",
        "rds:DescribeDBClusterParameterGroups",
        "rds:DescribeDBClusterParameters",
        "rds:DescribeDBClusterSnapshots",
        "rds:DescribeDBClusters",
        "rds:DescribeDBInstances",
        "rds:DescribeDBLogFiles",
        "rds:DescribeDBParameterGroups",
        "rds:DescribeDBParameters",
        "rds:DescribeDBSecurityGroups",
        "rds:DescribeDBSnapshotAttributes",
        "rds:DescribeDBSnapshots",
        "rds:DescribeDBEngineVersions",
        "rds:DescribeDBSubnetGroups",
        "rds:DescribeEventCategories",
        "rds:DescribeEvents",
        "rds:DescribeEventSubscriptions",
        "rds:DescribeOptionGroups",
        "rds:DescribeOptionGroupOptions",
        "rds:DescribeOrderableDBInstanceOptions",
        "rds:DescribePendingMaintenanceActions",
        "rds:DescribeReservedDBInstances",
        "rds:DescribeReservedDBInstancesOfferings",
        "rds:DownloadCompleteDBLogFile",
        "rds:DownloadDBLogFilePortion",
        "rds:FailoverDBCluster",
        "rds:ListTagsForResource",
        "rds:ModifyDBClusterParameterGroup",
        "rds:ModifyDBCluster",
        "rds:ModifyDBInstance",
        "rds:ModifyDBParameterGroup",
        "rds:ModifyDBSnapshotAttribute",
        "rds:ModifyDBSubnetGroup",
        "rds:ModifyEventSubscription",
        "rds:ModifyOptionGroup",
        "rds:PromoteReadReplica",
        "rds:PurchaseReservedDBInstancesOffering",
        "rds:RebootDBInstance",
        "rds:RemoveSourceIdentifierFromSubscription"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Sid": "Stmt1502899797958",
      "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:CreateTable",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeLimits",
        "dynamodb:DescribeReservedCapacity",
        "dynamodb:DescribeReservedCapacityOfferings",
        "dynamodb:DescribeStream",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:ListStreams",
        "dynamodb:ListTables",
        "dynamodb:ListTagsOfResource",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:TagResource",
        "dynamodb:UpdateItem",
        "dynamodb:UpdateTable",
        "dynamodb:UntagResource"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Sid": "Stmt1502899851813",
      "Action": [
        "cognito-idp:AddCustomAttributes",
        "cognito-idp:AdminAddUserToGroup",
        "cognito-idp:AdminConfirmSignUp",
        "cognito-idp:AdminCreateUser",
        "cognito-idp:AdminDeleteUser",
        "cognito-idp:AdminDeleteUserAttributes",
        "cognito-idp:AdminDisableUser",
        "cognito-idp:AdminEnableUser",
        "cognito-idp:AdminForgetDevice",
        "cognito-idp:AdminGetDevice",
        "cognito-idp:AdminGetUser",
        "cognito-idp:AdminInitiateAuth",
        "cognito-idp:AdminListDevices",
        "cognito-idp:AdminListGroupsForUser",
        "cognito-idp:AdminRemoveUserFromGroup",
        "cognito-idp:AdminResetUserPassword",
        "cognito-idp:AdminRespondToAuthChallenge",
        "cognito-idp:AdminSetUserSettings",
        "cognito-idp:AdminUpdateDeviceStatus",
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:AdminUserGlobalSignOut",
        "cognito-idp:CreateGroup",
        "cognito-idp:CreateUserImportJob",
        "cognito-idp:CreateUserPool",
        "cognito-idp:CreateUserPoolClient",
        "cognito-idp:DescribeUserImportJob",
        "cognito-idp:DescribeUserPool",
        "cognito-idp:DescribeUserPoolClient",
        "cognito-idp:GetCSVHeader",
        "cognito-idp:GetGroup",
        "cognito-idp:ListGroups",
        "cognito-idp:ListUserImportJobs",
        "cognito-idp:ListUserPoolClients",
        "cognito-idp:ListUserPools",
        "cognito-idp:ListUsers",
        "cognito-idp:ListUsersInGroup",
        "cognito-idp:StartUserImportJob",
        "cognito-idp:StopUserImportJob",
        "cognito-idp:UpdateGroup",
        "cognito-idp:UpdateUserPool",
        "cognito-idp:UpdateUserPoolClient"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Sid": "Stmt1502899894318",
      "Action": [
        "sns:AddPermission",
        "sns:CheckIfPhoneNumberIsOptedOut",
        "sns:ConfirmSubscription",
        "sns:CreatePlatformApplication",
        "sns:CreatePlatformEndpoint",
        "sns:CreateTopic",
        "sns:GetEndpointAttributes",
        "sns:GetPlatformApplicationAttributes",
        "sns:GetSMSAttributes",
        "sns:GetSubscriptionAttributes",
        "sns:GetTopicAttributes",
        "sns:ListEndpointsByPlatformApplication",
        "sns:ListPhoneNumbersOptedOut",
        "sns:ListPlatformApplications",
        "sns:ListSubscriptions",
        "sns:ListSubscriptionsByTopic",
        "sns:ListTopics",
        "sns:OptInPhoneNumber",
        "sns:Publish",
        "sns:SetEndpointAttributes",
        "sns:SetPlatformApplicationAttributes",
        "sns:SetSMSAttributes",
        "sns:SetSubscriptionAttributes",
        "sns:SetTopicAttributes",
        "sns:Subscribe",
        "sns:Unsubscribe"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Sid": "Stmt1502899995324",
      "Action": [
        "codedeploy:AddTagsToOnPremisesInstances",
        "codedeploy:BatchGetApplicationRevisions",
        "codedeploy:BatchGetApplications",
        "codedeploy:BatchGetDeploymentGroups",
        "codedeploy:BatchGetDeploymentInstances",
        "codedeploy:BatchGetDeployments",
        "codedeploy:BatchGetOnPremisesInstances",
        "codedeploy:CreateApplication",
        "codedeploy:CreateDeployment",
        "codedeploy:CreateDeploymentConfig",
        "codedeploy:CreateDeploymentGroup",
        "codedeploy:DeleteDeploymentGroup",
        "codedeploy:DeregisterOnPremisesInstance",
        "codedeploy:GetApplication",
        "codedeploy:GetApplicationRevision",
        "codedeploy:GetDeployment",
        "codedeploy:GetDeploymentConfig",
        "codedeploy:GetDeploymentGroup",
        "codedeploy:GetDeploymentInstance",
        "codedeploy:GetOnPremisesInstance",
        "codedeploy:ListApplicationRevisions",
        "codedeploy:ListApplications",
        "codedeploy:ListDeploymentConfigs",
        "codedeploy:ListDeploymentGroups",
        "codedeploy:ListDeploymentInstances",
        "codedeploy:ListDeployments",
        "codedeploy:ListOnPremisesInstances",
        "codedeploy:RegisterApplicationRevision",
        "codedeploy:RegisterOnPremisesInstance",
        "codedeploy:RemoveTagsFromOnPremisesInstances",
        "codedeploy:StopDeployment",
        "codedeploy:UpdateApplication",
        "codedeploy:UpdateDeploymentGroup"
      ],
      "Effect": "Allow",
      "Resource": "*"
    },
    {
      "Sid": "Stmt1502900027612",
      "Action": [
        "codepipeline:AcknowledgeJob",
        "codepipeline:AcknowledgeThirdPartyJob",
        "codepipeline:CreateCustomActionType",
        "codepipeline:CreatePipeline",
        "codepipeline:DisableStageTransition",
        "codepipeline:EnableStageTransition",
        "codepipeline:GetJobDetails",
        "codepipeline:GetPipeline",
        "codepipeline:GetPipelineState",
        "codepipeline:GetThirdPartyJobDetails",
        "codepipeline:ListActionTypes",
        "codepipeline:ListPipelines",
        "codepipeline:PollForJobs",
        "codepipeline:PollForThirdPartyJobs",
        "codepipeline:PutActionRevision",
        "codepipeline:PutApprovalResult",
        "codepipeline:PutJobFailureResult",
        "codepipeline:PutJobSuccessResult",
        "codepipeline:PutThirdPartyJobFailureResult",
        "codepipeline:PutThirdPartyJobSuccessResult",
        "codepipeline:RetryStageExecution",
        "codepipeline:StartPipelineExecution",
        "codepipeline:UpdatePipeline"
      ],
      "Effect": "Allow",
      "Resource": "*"
    }
  ]
}